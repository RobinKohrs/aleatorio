library(tidyverse)
?read_csv2()
# Use read_csv2 because it's an European file
dat = read_csv2(here("data_raw/ratios.csv"))
# Use read_csv2 because it's an European file
dat = read_csv2(here("data_raw/ratios.csv"))
library(here)
# Use read_csv2 because it's an European file
dat = read_csv2(here("data_raw/ratios.csv"))
dat
dat
dat %>%
pivot_longer(
cols = -1,
names_to = 'type',
values_to = 'ratio'
)
dat %>%
pivot_longer(
cols = -1,
names_to = 'type',
values_to = 'ratio'
) %>%
group_by(type) %>%
summarise(ratio = mean(ratio)) %>%
mutate(location = 'REGION AVERAGE')
### Combine with data
dat_longer <- dat %>%
pivot_longer(
cols = -1,
names_to = 'type',
values_to = 'ratio'
)
dat_longer
dat_longer_with_avgs <- dat_longer %>%
bind_rows(avgs)
dat_longer_with_avgs <- dat_longer %>%
bind_rows(avgs)
avgs <- dat %>%
pivot_longer(
cols = -1,
names_to = 'type',
values_to = 'ratio'
) %>%
group_by(type) %>%
summarise(ratio = mean(ratio)) %>%
mutate(location = 'REGION AVERAGE')
### Combine with data
dat_longer <- dat %>%
pivot_longer(
cols = -1,
names_to = 'type',
values_to = 'ratio'
)
dat_longer_with_avgs <- dat_longer %>%
bind_rows(avgs)
dat_longer_with_avgs %>% tail
install.packages("thematic")
thematic::okabe_ito(8)
thematic::okabe_ito(8)
# Make sure that bars are in the same order as in the data set
dat_factored <- dat_longer %>%
mutate(location = factor(location, levels = dat$location))
library(tidyverse)
library(here)
# Use read_csv2 because it's an European file
dat = read_csv2(here("data_raw/ratios.csv"))
avgs <- dat %>%
pivot_longer(
cols = -1,
names_to = 'type',
values_to = 'ratio'
) %>%
group_by(type) %>%
summarise(ratio = mean(ratio)) %>%
mutate(location = 'REGION AVERAGE')
### Combine with data
dat_longer <- dat %>%
pivot_longer(
cols = -1,
names_to = 'type',
values_to = 'ratio'
)
dat_longer_with_avgs <- dat_longer %>%
bind_rows(avgs)
thematic::okabe_ito(8)
library(tidyverse)
library(here)
# Use read_csv2 because it's an European file
dat = read_csv2(here("data_raw/ratios.csv"))
avgs <- dat %>%
pivot_longer(
cols = -1,
names_to = 'type',
values_to = 'ratio'
) %>%
group_by(type) %>%
summarise(ratio = mean(ratio)) %>%
mutate(location = 'REGION AVERAGE')
### Combine with data
dat_longer <- dat %>%
pivot_longer(
cols = -1,
names_to = 'type',
values_to = 'ratio'
)
dat_longer_with_avgs <- dat_longer %>%
bind_rows(avgs)
thematic::okabe_ito(8)
dat_longer %>% glimpse
p <- dat_factored %>%
ggplot(aes(location, ratio)) +
geom_col(
data = filter(dat_factored, type == 'inventory_turnover'),
fill = color_palette[2]
) +
theme_minimal()
p <- dat_longer %>%
ggplot(aes(location, ratio)) +
geom_col(
data = filter(dat_factored, type == 'inventory_turnover'),
fill = color_palette[2]
) +
theme_minimal()
color_palette = thematic::okabe_ito(8)
# Make sure that bars are in the same order as in the data set
dat_factored <- dat_longer %>%
mutate(location = factor(location, levels = dat$location))
p <- dat_longer %>%
ggplot(aes(location, ratio)) +
geom_col(
data = filter(dat_factored, type == 'inventory_turnover'),
fill = color_palette[2]
) +
theme_minimal()
p
p <- dat_factored %>%
ggplot(aes(location, ratio)) +
geom_col(
data = filter(dat_factored, type == 'inventory_turnover'),
fill = color_palette[2]
) +
theme_minimal()
p
dat_longer %>%
ggplot(aes(location, ratio)) +
geom_col(
data = filter(dat_factored, type == 'inventory_turnover'),
fill = color_palette[2]
) +
theme_minimal()
dat_factored %>%
ggplot(aes(location, ratio)) +
geom_col(
data = filter(dat_factored, type == 'inventory_turnover'),
fill = color_palette[2]
) +
theme_minimal()
p = dat_factored %>%
ggplot(aes(location, ratio)) +
geom_col(
data = filter(dat_factored, type == 'inventory_turnover'),
fill = color_palette[2]
) +
theme_minimal()
p1 <- p +
labs(x = element_blank(), y = element_blank()) +
theme(
axis.text.x = element_text(angle = 50, hjust = 1)
)
p1
p1 + coord_cartesian(ylim = c(0, 30), expand = F)
p1 + coord_cartesian( expand = F)
p2 <- p1 + coord_cartesian(ylim = c(0, 30), expand = F)
p3 <- p2 +
theme(
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(colour = 'black', size = 0.75)
)
p3
p3 <- p2 +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_line(colour = 'black', size = 0.75)
)
p3
p3 <- p2 +
theme(
# panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_line(colour = 'black', size = 0.75)
)
p3
p3 <- p2 +
theme(
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_line(colour = 'black', size = 0.75)
)
p3
p3 <- p2 +
theme(
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(colour = 'black', size = 0.75)
)
p3
p4 <- p3 +
scale_y_continuous(
breaks = seq(0, 30, 5),
labels = scales::label_comma(accuracy = 0.1)
)
p4
p5 <- p4 +
geom_point(
data = filter(dat_factored, type == 'store_lower'),
col = color_palette[1],
size = 3
) +
geom_point(
data = filter(dat_factored, type == 'store_upper'),
col = color_palette[3],
size = 3
)
p5
dat_with_avgs <- dat_longer_with_avgs %>%
pivot_wider(
names_from = 'type',
values_from = 'ratio'
)
dat_with_avgs
dat_with_avgs %>%
ggplot() +
geom_rect(
aes(
xmin = store_lower,
xmax = store_upper,
ymin = location,
ymax = location
)
)
dat_with_avgs %>%
ggplot() +
geom_rect(
aes(
xmin = store_lower,
xmax = store_upper,
ymin = location,
ymax = location + 1
)
)
dat_with_avgs <- dat_longer_with_avgs %>%
pivot_wider(
names_from = 'type',
values_from = 'ratio'
)
library(tidyverse)
library(here)
# Use read_csv2 because it's an European file
dat = read_csv2(here("data_raw/ratios.csv"))
avgs <- dat %>%
pivot_longer(
cols = -1,
names_to = 'type',
values_to = 'ratio'
) %>%
group_by(type) %>%
summarise(ratio = mean(ratio)) %>%
mutate(location = 'REGION AVERAGE')
### Combine with data
dat_longer <- dat %>%
pivot_longer(
cols = -1,
names_to = 'type',
values_to = 'ratio'
)
dat_longer_with_avgs <- dat_longer %>%
bind_rows(avgs)
color_palette = thematic::okabe_ito(8)
# Make sure that bars are in the same order as in the data set
dat_factored <- dat_longer %>%
mutate(location = factor(location, levels = dat$location))
dat_with_avgs <- dat_longer_with_avgs %>%
pivot_wider(
names_from = 'type',
values_from = 'ratio'
)
dat_longer_with_avgs <- dat_longer %>%
bind_rows(avgs)
# Use read_csv2 because it's an European file
dat = read_csv2(here("data_raw/ratios.csv"))
### Combine with data
dat_longer <- dat %>%
pivot_longer(
cols = -1,
names_to = 'type',
values_to = 'ratio'
)
dat_longer_with_avgs <- dat_longer %>%
bind_rows(avgs)
avgs <- dat %>%
pivot_longer(
cols = -1,
names_to = 'type',
values_to = 'ratio'
) %>%
group_by(type) %>%
summarise(ratio = mean(ratio)) %>%
mutate(location = 'REGION AVERAGE')
### Combine with data
dat_longer <- dat %>%
pivot_longer(
cols = -1,
names_to = 'type',
values_to = 'ratio'
)
dat_longer_with_avgs <- dat_longer %>%
bind_rows(avgs)
color_palette = thematic::okabe_ito(8)
# Make sure that bars are in the same order as in the data set
dat_factored <- dat_longer %>%
mutate(location = factor(location, levels = dat$location))
dat_with_avgs <- dat_longer_with_avgs %>%
pivot_wider(
names_from = 'type',
values_from = 'ratio'
)
dat_with_avgs %>%
ggplot() +
geom_rect(
aes(
xmin = store_lower,
xmax = store_upper,
ymin = location,
ymax = location
)
)
dat_with_avgs
bar_height <- 0.4
no_highlight_col <- 'grey70'
average_highlight_col <- 'grey40'
below_highlight <- color_palette[2]
dat_with_avgs
dat_with_avgs %>%
mutate(num = row_number(inventory_turnover))
dat_with_avgs %>%
mutate(num = row_number())
dat_with_avgs %>%
mutate(num = row_number(inventory_turnover)) %>%
# Sort so that everything is in order of rank
# Important for text labels later on
arrange(desc(num))
dat_sorted = dat_with_avgs %>%
mutate(num = row_number(inventory_turnover)) %>%
# Sort so that everything is in order of rank
# Important for text labels later on
arrange(desc(num)) %>%
mutate(
rect_color = case_when(
inventory_turnover < store_lower ~ below_highlight,
location == 'REGION AVERAGE' ~ average_highlight_col,
T ~ no_highlight_col
),
rect_alpha = if_else(
inventory_turnover < store_lower,
0.5,
1
),
point_color = if_else(
inventory_turnover < store_lower,
below_highlight,
'black'
),
point_fill = if_else(
inventory_turnover < store_lower,
below_highlight,
'white'
),
point_size = if_else(
inventory_turnover < store_lower,
3,
2
)
)
dat_sorted
dat_sorted %>%
ggplot() +
geom_rect(
aes(
xmin = store_lower,
xmax = store_upper,
ymin = num - bar_height,
ymax = num + bar_height,
fill = rect_color,
alpha = rect_alpha
),
) +
geom_point(
aes(
x = inventory_turnover,
y = num,
fill = point_fill,
col = point_color,
size = point_size
),
shape = 21,
stroke = 1
) +
scale_fill_identity() +
scale_color_identity() +
scale_size_identity() +
scale_alpha_identity() +
theme_minimal()
dat_sorted %>%
ggplot() +
geom_rect(
aes(
xmin = store_lower,
xmax = store_upper,
ymin = num - bar_height,
ymax = num + bar_height,
fill = rect_color,
alpha = rect_alpha
),
) +
geom_point(
aes(
x = inventory_turnover,
y = num,
fill = point_fill,
col = point_color,
size = point_size
),
# shape = 21,
stroke = 1
) +
scale_fill_identity() +
scale_color_identity() +
scale_size_identity() +
scale_alpha_identity() +
theme_minimal()
dat_sorted %>%
ggplot() +
geom_rect(
aes(
xmin = store_lower,
xmax = store_upper,
ymin = num - bar_height,
ymax = num + bar_height,
fill = rect_color,
alpha = rect_alpha
),
) +
geom_point(
aes(
x = inventory_turnover,
y = num,
fill = point_fill,
col = point_color,
size = point_size
),
shape = 21,
stroke = 1
) +
scale_fill_identity() +
scale_color_identity() +
scale_size_identity() +
scale_alpha_identity() +
theme_minimal()
install.packages("ggchicklet")
devtools::install_github("https://github.com/hrbrmstr/ggchicklet")
gitcreds::gitcreds_set()
devtools::install_github("https://github.com/hrbrmstr/ggchicklet")
usethis::edit_r_environ()
