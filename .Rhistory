theme(
legend.position = "none",
plot.background = element_rect(fill = "grey99", color = NA),
axis.text.x = element_blank(),
panel.grid = element_blank(),
plot.title = element_text(size = 24),
plot.subtitle = element_text(lineheight = 1, margin = margin(0, 0, -40, 0))
)
library(waffle)
devtools::install_git("https://git.rud.is/hrbrmstr/waffle.git")
library(waffle)
p2 <- ggplot(ph_year, aes(year, n, label = paste(round(n / 1000, 1), "K"))) +
geom_line(color = "gray60") +
geom_point(color = "gray60") +
geom_shadowtext(nudge_y = 500, family = f1, color = "gray60", bg.color = "gray99", bg.r = 0.2, size = 3) +
scale_x_continuous(breaks = 2014:2021) +
scale_y_continuous(labels = scales::label_number(suffix = " K", scale = 1e-3)) +
labs(title = "Total number of products by year") +
theme_void(base_family = f1, base_size = 8) +
theme(
axis.text.x = element_text(color = "gray60"),
plot.title = element_text(color = "gray40")
)
p2
p2 <- ggplot(ph_year, aes(year, n, label = paste(round(n / 1000, 1), "K"))) +
geom_line(color = "gray60") +
geom_point(color = "gray60") +
geom_text(nudge_y = 500, family = f1, color = "gray60", bg.color = "gray99", bg.r = 0.2, size = 3) +
scale_x_continuous(breaks = 2014:2021) +
scale_y_continuous(labels = scales::label_number(suffix = " K", scale = 1e-3)) +
labs(title = "Total number of products by year") +
theme_void(base_family = f1, base_size = 8) +
theme(
axis.text.x = element_text(color = "gray60"),
plot.title = element_text(color = "gray40")
)
p2
p2
p2 <- ggplot(ph_year, aes(year, n, label = paste(round(n / 1000, 1), "K"))) +
geom_line(color = "gray60") +
geom_point(color = "gray60") +
geom_shadowtext(nudge_y = 500, family = f1, color = "gray60", bg.color = "gray99", bg.r = 0.2, size = 3) +
scale_x_continuous(breaks = 2014:2021) +
scale_y_continuous(labels = scales::label_number(suffix = " K", scale = 1e-3)) +
labs(title = "Total number of products by year") +
theme_void(base_family = f1, base_size = 8) +
theme(
axis.text.x = element_text(color = "gray60"),
plot.title = element_text(color = "gray40")
)
p2
p3 <- top_emoji %>%
arrange(year, -p) %>%
group_by(year) %>%
summarise(label = paste(emoji, collapse = " ")) %>%
ggplot() +
geom_text(aes(-0.7, year, label = paste(year, "  ")), hjust = 0.5, family = f1, color = "gray60", size = 3) +
geom_text(aes(0, year, label = label), hjust = 0) +
scale_x_continuous(limits = c(-1, 10)) +
scale_y_reverse() +
coord_cartesian(clip = "off") +
labs(title = "Top 3 (with ties) emoji by frequency of use") +
theme_void(base_family = f1) +
theme(
plot.title = element_text(margin = margin(0, 0, 10, 0), size = 10, color = "gray40")
)
p3
p3 <- top_emoji %>%
arrange(year, -p) %>%
group_by(year) %>%
summarise(label = paste(emoji, collapse = " ")) %>%
ggplot() +
geom_text(aes(-0.7, year, label = paste(year, "  ")), hjust = 0.5, family = f1, color = "gray60", size = 3) +
geom_text(aes(0, year, label = label), hjust = 0) +
scale_x_continuous(limits = c(-1, 10)) +
scale_y_reverse() +
coord_cartesian(clip = "on") +
labs(title = "Top 3 (with ties) emoji by frequency of use") +
theme_void(base_family = f1) +
theme(
plot.title = element_text(margin = margin(0, 0, 10, 0), size = 10, color = "gray40")
)
p3
p3 <- top_emoji %>%
arrange(year, -p) %>%
group_by(year) %>%
summarise(label = paste(emoji, collapse = " ")) %>%
ggplot() +
geom_text(aes(-0.7, year, label = paste(year, "  ")), hjust = 0.5, family = f1, color = "gray60", size = 3) +
geom_text(aes(0, year, label = label), hjust = 0) +
scale_x_continuous(limits = c(-1, 10)) +
scale_y_reverse() +
coord_cartesian(clip = "on") +
labs(title = "Top 3 (with ties) emoji by frequency of use") +
theme_void(base_family = f1) +
theme(
plot.title = element_text(margin = margin(10, 0, 10, 0), size = 10, color = "gray40")
)
p3
library(tidyverse)
library(lubridate)
library(ggfx)
library(ggpath)
install.packages("ggpath")
library(ggpath)
horror_movies <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-01/horror_movies.csv')
horror_movies
zombie <- horror_movies %>%
filter(if_any(c(original_title, title, overview, tagline), ~ str_detect(tolower(.x), "zombie"))) %>%
filter(original_language == "en")
zombie
zombie_highl <- zombie %>%
filter(
original_title == "Dawn of the Dead" |
original_title == "Night of the Living Dead" |
original_title == "The Return of the Living Dead" |
original_title == "Shaun of the Dead"
)
zombie_highl
# cottonbro studio
# https://www.pexels.com/photo/zombies-behind-shabby-door-5435562/
img <- "https://images.pexels.com/photos/5435562/pexels-photo-5435562.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=3"
img
f1 <- "Outfit"
f2 <- "Sharpie"
ggplot(zombie) +
as_reference(
geom_histogram(aes(year(release_date)), binwidth = 1, fill = "deeppink1"),
id = "histomask"
)
ggplot(zombie) +
as_reference(
geom_histogram(aes(year(release_date)), binwidth = 1, fill = "deeppink1"),
id = "histomask"
) +
with_mask(
geom_from_path(aes(path = img, x = 2009, y = 35), stat = "unique", width = 2.8, height = 2.8),
mask = ch_alpha("histomask")
)
ggplot(zombie) +
as_reference(
geom_histogram(aes(year(release_date)), binwidth = 1, fill = "deeppink1"),
id = "histomask"
) +
with_mask(
geom_from_path(aes(path = img, x = 2009, y = 35), stat = "unique", width = 2.8, height = 2.8),
mask = ch_alpha("circle")
)
ggplot(zombie) +
as_reference(
geom_histogram(aes(year(release_date)), binwidth = 1, fill = "deeppink1"),
id = "histomask"
) +
with_mask(
geom_from_path(aes(path = img, x = 2009, y = 35), stat = "unique", width = 2.8, height = 2.8),
mask = ch_alpha("histomask")
) +
ggrepel::geom_text_repel(data = zombie_highl,
aes(x = year(release_date), y = -0.5,
label = paste0(title, ", ", year(release_date))),
nudge_y = 6,
segment.curvature = -1e-20,
family = f2,
fontface = "bold",
size = 4,
bg.color = "grey97",
seed = 999,
box.padding = 0.4,
segment.size = 0.25,
color = "deeppink4"
) +
geom_point(data = zombie_highl, aes(x = year(release_date), y = -0.5), color = "deeppink1") +
annotate("text", x = 1959, y = 20, label = "Zombie movies", size = 18, family = f2, fontface = "bold", hjust = 0, color = "deeppink2") +
annotate("text", x = 1959, y = 24, label = "Number of english speaking movies\nin The Movie Datbase that have the\nword 'zombie' in their title or description", size = 6, family = f1, fontface = "bold", hjust = 0, color = "deeppink3", vjust = 1, lineheight = 0.9) +
annotate("text", x = 1959, y = 31.5, label = "Source: The Movie Datbase 路 Image: cottonbro studio 路 Graphic: Georgios Karamanis", size = 3, family = f1, fontface = "bold", hjust = 0, color = "deeppink4", vjust = 1, lineheight = 0.9) +
scale_y_reverse(limits = c(50, -8), breaks = seq(0, 50, 10), labels = seq(0, 50, 10), position = "right") +
theme_minimal(base_family = "Outfit") +
theme(
plot.background = element_rect(fill = "grey97", color = NA),
axis.title = element_blank(),
axis.text = element_text(face = "bold", size = 14, color = "deeppink4")
)
install.packages("ggrepel")
ggplot(zombie) +
as_reference(
geom_histogram(aes(year(release_date)), binwidth = 1, fill = "deeppink1"),
id = "histomask"
) +
with_mask(
geom_from_path(aes(path = img, x = 2009, y = 35), stat = "unique", width = 2.8, height = 2.8),
mask = ch_alpha("histomask")
) +
ggrepel::geom_text_repel(data = zombie_highl,
aes(x = year(release_date), y = -0.5,
label = paste0(title, ", ", year(release_date))),
nudge_y = 6,
segment.curvature = -1e-20,
family = f2,
fontface = "bold",
size = 4,
bg.color = "grey97",
seed = 999,
box.padding = 0.4,
segment.size = 0.25,
color = "deeppink4"
)
ggplot(zombie) +
as_reference(
geom_histogram(aes(year(release_date)), binwidth = 1, fill = "deeppink1"),
id = "histomask"
) +
with_mask(
geom_from_path(aes(path = img, x = 2009, y = 35), stat = "unique", width = 2.8, height = 2.8),
mask = ch_alpha("histomask")
) +
ggrepel::geom_text_repel(data = zombie_highl,
aes(x = year(release_date), y = -0.5,
label = paste0(title, ", ", year(release_date))),
nudge_y = 6,
segment.curvature = -1e-20,
family = f2,
fontface = "bold",
size = 4,
bg.color = "grey97",
seed = 999,
box.padding = 0.4,
segment.size = 0.25,
color = "deeppink4"
) +
geom_point(data = zombie_highl, aes(x = year(release_date), y = -0.5), color = "deeppink1") +
annotate("text", x = 1959, y = 20, label = "Zombie movies", size = 18, family = f2, fontface = "bold", hjust = 0, color = "deeppink2") +
annotate("text", x = 1959, y = 24, label = "Number of english speaking movies\nin The Movie Datbase that have the\nword 'zombie' in their title or description", size = 6, family = f1, fontface = "bold", hjust = 0, color = "deeppink3", vjust = 1, lineheight = 0.9) +
annotate("text", x = 1959, y = 31.5, label = "Source: The Movie Datbase 路 Image: cottonbro studio 路 Graphic: Georgios Karamanis", size = 3, family = f1, fontface = "bold", hjust = 0, color = "deeppink4", vjust = 1, lineheight = 0.9) +
scale_y_reverse(limits = c(50, -8), breaks = seq(0, 50, 10), labels = seq(0, 50, 10), position = "right") +
theme_minimal(base_family = "Outfit") +
theme(
plot.background = element_rect(fill = "grey97", color = NA),
axis.title = element_blank(),
axis.text = element_text(face = "bold", size = 14, color = "deeppink4")
)
ggplot(zombie) +
as_reference(
geom_histogram(aes(year(release_date)), binwidth = 1, fill = "deeppink1"),
id = "histomask"
) +
with_mask(
geom_from_path(aes(path = img, x = 2009, y = 35), stat = "unique", width = 2.8, height = 2.8),
mask = ch_alpha("histomask")
) +
ggrepel::geom_text_repel(data = zombie_highl,
aes(x = year(release_date), y = -0.5,
label = paste0(title, ", ", year(release_date))),
nudge_y = 6,
segment.curvature = -1e-20,
family = f2,
fontface = "bold",
size = 4,
bg.color = "grey97",
seed = 999,
box.padding = 0.4,
segment.size = 0.25,
color = "deeppink4"
) +
geom_point(data = zombie_highl, aes(x = year(release_date), y = -0.5), color = "deeppink1") +
annotate("text", x = 1959, y = 20, label = "Zombie movies", size = 18, family = f2, fontface = "bold", hjust = 0, color = "deeppink2") +
annotate("text", x = 1959, y = 24, label = "Number of english speaking movies\nin The Movie Datbase that have the\nword 'zombie' in their title or description", size = 6, family = f1, fontface = "bold", hjust = 0, color = "deeppink3", vjust = 1, lineheight = 0.9) +
annotate("text", x = 1959, y = 31.5, label = "Source: The Movie Datbase 路 Image: cottonbro studio 路 Graphic: Georgios Karamanis", size = 3, family = f1, fontface = "bold", hjust = 0, color = "deeppink4", vjust = 1, lineheight = 0.9) +
scale_y_reverse(limits = c(50, -8), breaks = seq(0, 50, 10), labels = seq(0, 50, 10), position = "right")
df = data.frame(
x = 1:10
y = sample(1:100, 10)
df = data.frame(
x = 1:10,
y = sample(1:100, 10)
)
df
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
)
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
scale_y_reverse()
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
scale_y_reverse(limits = c(0,20))
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
scale_y_reverse(limits = c(0,-20))
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
scale_y_reverse(limits = c(0,20))
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
scale_y_reverse(limits = c(NA, NA))
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
scale_y_reverse(limits = c(NA, NA)) +
coord_cartesian(ylim = c(0,20))
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
scale_y_reverse(limits = c(NA, NA))
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
coord_cartesian(ylim = c(0,20))+
scale_y_reverse(limits = c(NA, NA))
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
coord_cartesian(ylim = c(0,20))+
scale_y_reverse()
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
coord_cartesian(ylim = c(0,-20))+
scale_y_reverse()
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
coord_cartesian(ylim = c(20,0))+
scale_y_reverse()
library(rvest)
library(glue)
library(dplyr)
library(stringr)
# source ------------------------------------------------------------------
source("_wgGesucht/analysis/utils.R")
# outfile -----------------------------------------------------------------
outpath = "_wgGesucht/analysis/wgs.csv"
if(!file.exists(outpath)) {
print("file does not exist")
df = data.frame(
price = NA,
location = NA,
id = NA,
size = NA,
wg = NA
)
write.csv(df, outpath)
start = 9699220
} else{
df = read.csv(outpath)
start = df %>% filter %>% pull(id) %>% max(., na.rm=T)
print("file exists reading...")
}
library(dplyr)
library(here)
data = read.csv("_wgGesucht/analysis/wgs.csv")
data
data %>% glimpse()
# remove all without price ------------------------------------------------
data %>%
filter(!is.na(price))
# remove all without price ------------------------------------------------
noNa = data %>%
filter(!is.na(price))
noNa %>% glimpse
noNaWg = data %>%
filter(wg == T)
noNaWg
noNa
noNaWg = noNA %>%
filter(wg == T)
noNaWg = noNa %>%
filter(wg == T)
noNaWg
outdir = dirname(outpath)
# output path -------------------------------------------------------------
outpath = "_wgGesucht/analysis/nwgs.csv"
outdir = dirname(outpath)
outdir
df = data.frame(
date = Sys.Date(),
noNaAndWg = nrow(noNaWg)
)
df
df2 = df
rbind(df, df2)
# calculate how many wgsjj:w ----------------------------------------------
data = read.csv("_wgGesucht/analysis/wgs.csv")
noNa = data %>%
filter(!is.na(price))
noNaWg = noNa %>%
filter(wg == T)
df = data.frame(
date = Sys.Date(),
noNaAndWg = nrow(noNaWg)
)
df
noNa %>% dim
Sys.Date()
Sys.getlocale()
now
?Sys.Date()
Sys.time()
# output path -------------------------------------------------------------
outpath = "_wgGesucht/analysis/nwgs.csv"
df_old = read.csv(outpath)
# output path -------------------------------------------------------------
outpath = "_wgGesucht/analysis/nwgs.csv"
outdir = dirname(outpath)
write.csv(df, outpath, row.names = F)
f
df
noNa = data %>%
filter(!is.na(price))
noNaWg = noNa %>%
filter(wg == T)
df = data.frame(
date = Sys.Date(),
noNaAndWg = nrow(noNaWg)
)
# calculate how many wgsjj:w ----------------------------------------------
data = read.csv("_wgGesucht/analysis/wgs.csv")
noNa = data %>%
filter(!is.na(price))
noNaWg = noNa %>%
filter(wg == T)
df = data.frame(
date = Sys.Date(),
noNaAndWg = nrow(noNaWg)
)
# calculate how many wgsjj:w ----------------------------------------------
data = read.csv("_wgGesucht/analysis/wgs.csv")
noNa = data %>%
filter(!is.na(price))
library(dplyr)
noNa = data %>%
filter(!is.na(price))
noNaWg = noNa %>%
filter(wg == T)
df = data.frame(
date = Sys.Date(),
noNaAndWg = nrow(noNaWg)
)
df
# output path -------------------------------------------------------------
outpath = "_wgGesucht/analysis/nwgs.csv"
outdir = dirname(outpath)
write.csv(df, outpath, row.names = F)
df_old = read.csv(outpath)
df_new = rbind(df, df_old)
write.csv(df_new, outpath, row.names = F)
noNa = data %>%
filter(!is.na(price))
noNaWg = noNa %>%
filter(wg == T)
df = data.frame(
date = Sys.time(),
noNaAndWg = nrow(noNaWg)
)
# output path -------------------------------------------------------------
outpath = "_wgGesucht/analysis/nwgs.csv"
outdir = dirname(outpath)
df_old = read.csv(outpath)
df_new = rbind(df, df_old)
df_new
