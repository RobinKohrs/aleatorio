library(tidyverse)
library(emo)
library(lubridate)
library(waffle)
install.packages("waffle")
library(patchwork)
library(shadowtext)
install.packages("shadowtext")
library(camcorder)
library(shadowtext)
library(camcorder)
product_hunt <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-10-04/product_hunt.csv')
product_hunt
product_hunt %>% fim
product_hunt %>% dim
product_hunt %>% glimpse
?ji_detect()
ji_detect("sdasd")
View(product_hunt)
product_hunt$product_description
ph_emoji <- product_hunt %>%
mutate(
year = year(release_date),
has_emoji = ji_detect(product_description),
emoji = ji_extract_all(product_description)
) %>% View
ph_emoji <- product_hunt %>%
mutate(
year = year(release_date),
has_emoji = ji_detect(product_description),
emoji = ji_extract_all(product_description)
) %>%
select(year, has_emoji, emoji) %>%
# Filter products with emoji in description
filter(has_emoji) %>%
unnest(emoji) %>% View
ph_emoji <- product_hunt %>%
mutate(
year = year(release_date),
has_emoji = ji_detect(product_description),
emoji = ji_extract_all(product_description)
) %>%
select(year, has_emoji, emoji) %>%
# Filter products with emoji in description
filter(has_emoji) %>%
slice_head(n=10) %>% View
ph_emoji <- product_hunt %>%
mutate(
year = year(release_date),
has_emoji = ji_detect(product_description),
emoji = ji_extract_all(product_description)
) %>%
select(year, has_emoji, emoji) %>%
# Filter products with emoji in description
filter(has_emoji) %>%
slice_head(n=10) %>%
unnest(emoji) %>% View
ph_emoji <- product_hunt %>%
mutate(
year = year(release_date),
has_emoji = ji_detect(product_description),
emoji = ji_extract_all(product_description)
) %>%
select(year, has_emoji, emoji) %>%
# Filter products with emoji in description
filter(has_emoji) %>%
unnest(emoji) %>%
# Calculations
group_by(year, emoji) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(year) %>%
mutate(
total = sum(n),
p = n / total
) %>%
ungroup()
ph_emoji
# Top 5 by proportion
top_emoji <- ph_emoji %>%
group_by(year) %>%
slice_max(order_by = p, n = 3)
top_emoji
# Count all products by year
ph_year <- product_hunt %>%
mutate(year = year(release_date)) %>%
count(year)
ph_year
f1 <- "Outfit"
p1 <- ggplot(ph_emoji, aes(fill = emoji, values = n, label = emoji)) +
geom_pictogram(n_rows = 20, flip = TRUE, size = 1.2) +
scale_y_continuous(breaks = seq(0, 150, 25), labels = function(x) scales::number(x * 20), expand = c(0,0), position = "right") +
facet_wrap(vars(year), nrow = 1, strip.position = "bottom") +
labs(
title = "ðŸ’¥EmojiplosionðŸ’¥",
subtitle = str_wrap("The use of emoji in the product descriptions on Product Hunt exploded in 2018. The waffle chart shows all the emoji used by year, from a total of 9 emoji in 7 500 product descriptions in 2014 to 2 843 emoji in 2021. The most used emoji, the check mark button âœ… , has been used 872 times, more than two times the number of all emoji used between 2014 and 2017.", 110),
caption = "Source: components.one Â· Graphic: Georgios Karamanis"
) +
coord_fixed() +
theme_minimal(base_family = f1) +
theme(
legend.position = "none",
plot.background = element_rect(fill = "grey99", color = NA),
axis.text.x = element_blank(),
panel.grid = element_blank(),
plot.title = element_text(size = 24),
plot.subtitle = element_text(lineheight = 1, margin = margin(0, 0, -40, 0))
)
library(waffle)
p1 <- ggplot(ph_emoji, aes(fill = emoji, values = n, label = emoji)) +
geom_pictogram(n_rows = 20, flip = TRUE, size = 1.2) +
scale_y_continuous(breaks = seq(0, 150, 25), labels = function(x) scales::number(x * 20), expand = c(0,0), position = "right") +
facet_wrap(vars(year), nrow = 1, strip.position = "bottom") +
labs(
title = "ðŸ’¥EmojiplosionðŸ’¥",
subtitle = str_wrap("The use of emoji in the product descriptions on Product Hunt exploded in 2018. The waffle chart shows all the emoji used by year, from a total of 9 emoji in 7 500 product descriptions in 2014 to 2 843 emoji in 2021. The most used emoji, the check mark button âœ… , has been used 872 times, more than two times the number of all emoji used between 2014 and 2017.", 110),
caption = "Source: components.one Â· Graphic: Georgios Karamanis"
) +
coord_fixed() +
theme_minimal(base_family = f1) +
theme(
legend.position = "none",
plot.background = element_rect(fill = "grey99", color = NA),
axis.text.x = element_blank(),
panel.grid = element_blank(),
plot.title = element_text(size = 24),
plot.subtitle = element_text(lineheight = 1, margin = margin(0, 0, -40, 0))
)
library(waffle)
devtools::install_git("https://git.rud.is/hrbrmstr/waffle.git")
library(waffle)
p2 <- ggplot(ph_year, aes(year, n, label = paste(round(n / 1000, 1), "K"))) +
geom_line(color = "gray60") +
geom_point(color = "gray60") +
geom_shadowtext(nudge_y = 500, family = f1, color = "gray60", bg.color = "gray99", bg.r = 0.2, size = 3) +
scale_x_continuous(breaks = 2014:2021) +
scale_y_continuous(labels = scales::label_number(suffix = " K", scale = 1e-3)) +
labs(title = "Total number of products by year") +
theme_void(base_family = f1, base_size = 8) +
theme(
axis.text.x = element_text(color = "gray60"),
plot.title = element_text(color = "gray40")
)
p2
p2 <- ggplot(ph_year, aes(year, n, label = paste(round(n / 1000, 1), "K"))) +
geom_line(color = "gray60") +
geom_point(color = "gray60") +
geom_text(nudge_y = 500, family = f1, color = "gray60", bg.color = "gray99", bg.r = 0.2, size = 3) +
scale_x_continuous(breaks = 2014:2021) +
scale_y_continuous(labels = scales::label_number(suffix = " K", scale = 1e-3)) +
labs(title = "Total number of products by year") +
theme_void(base_family = f1, base_size = 8) +
theme(
axis.text.x = element_text(color = "gray60"),
plot.title = element_text(color = "gray40")
)
p2
p2
p2 <- ggplot(ph_year, aes(year, n, label = paste(round(n / 1000, 1), "K"))) +
geom_line(color = "gray60") +
geom_point(color = "gray60") +
geom_shadowtext(nudge_y = 500, family = f1, color = "gray60", bg.color = "gray99", bg.r = 0.2, size = 3) +
scale_x_continuous(breaks = 2014:2021) +
scale_y_continuous(labels = scales::label_number(suffix = " K", scale = 1e-3)) +
labs(title = "Total number of products by year") +
theme_void(base_family = f1, base_size = 8) +
theme(
axis.text.x = element_text(color = "gray60"),
plot.title = element_text(color = "gray40")
)
p2
p3 <- top_emoji %>%
arrange(year, -p) %>%
group_by(year) %>%
summarise(label = paste(emoji, collapse = " ")) %>%
ggplot() +
geom_text(aes(-0.7, year, label = paste(year, "  ")), hjust = 0.5, family = f1, color = "gray60", size = 3) +
geom_text(aes(0, year, label = label), hjust = 0) +
scale_x_continuous(limits = c(-1, 10)) +
scale_y_reverse() +
coord_cartesian(clip = "off") +
labs(title = "Top 3 (with ties) emoji by frequency of use") +
theme_void(base_family = f1) +
theme(
plot.title = element_text(margin = margin(0, 0, 10, 0), size = 10, color = "gray40")
)
p3
p3 <- top_emoji %>%
arrange(year, -p) %>%
group_by(year) %>%
summarise(label = paste(emoji, collapse = " ")) %>%
ggplot() +
geom_text(aes(-0.7, year, label = paste(year, "  ")), hjust = 0.5, family = f1, color = "gray60", size = 3) +
geom_text(aes(0, year, label = label), hjust = 0) +
scale_x_continuous(limits = c(-1, 10)) +
scale_y_reverse() +
coord_cartesian(clip = "on") +
labs(title = "Top 3 (with ties) emoji by frequency of use") +
theme_void(base_family = f1) +
theme(
plot.title = element_text(margin = margin(0, 0, 10, 0), size = 10, color = "gray40")
)
p3
p3 <- top_emoji %>%
arrange(year, -p) %>%
group_by(year) %>%
summarise(label = paste(emoji, collapse = " ")) %>%
ggplot() +
geom_text(aes(-0.7, year, label = paste(year, "  ")), hjust = 0.5, family = f1, color = "gray60", size = 3) +
geom_text(aes(0, year, label = label), hjust = 0) +
scale_x_continuous(limits = c(-1, 10)) +
scale_y_reverse() +
coord_cartesian(clip = "on") +
labs(title = "Top 3 (with ties) emoji by frequency of use") +
theme_void(base_family = f1) +
theme(
plot.title = element_text(margin = margin(10, 0, 10, 0), size = 10, color = "gray40")
)
p3
library(tidyverse)
library(lubridate)
library(ggfx)
library(ggpath)
install.packages("ggpath")
library(ggpath)
horror_movies <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-01/horror_movies.csv')
horror_movies
zombie <- horror_movies %>%
filter(if_any(c(original_title, title, overview, tagline), ~ str_detect(tolower(.x), "zombie"))) %>%
filter(original_language == "en")
zombie
zombie_highl <- zombie %>%
filter(
original_title == "Dawn of the Dead" |
original_title == "Night of the Living Dead" |
original_title == "The Return of the Living Dead" |
original_title == "Shaun of the Dead"
)
zombie_highl
# cottonbro studio
# https://www.pexels.com/photo/zombies-behind-shabby-door-5435562/
img <- "https://images.pexels.com/photos/5435562/pexels-photo-5435562.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=3"
img
f1 <- "Outfit"
f2 <- "Sharpie"
ggplot(zombie) +
as_reference(
geom_histogram(aes(year(release_date)), binwidth = 1, fill = "deeppink1"),
id = "histomask"
)
ggplot(zombie) +
as_reference(
geom_histogram(aes(year(release_date)), binwidth = 1, fill = "deeppink1"),
id = "histomask"
) +
with_mask(
geom_from_path(aes(path = img, x = 2009, y = 35), stat = "unique", width = 2.8, height = 2.8),
mask = ch_alpha("histomask")
)
ggplot(zombie) +
as_reference(
geom_histogram(aes(year(release_date)), binwidth = 1, fill = "deeppink1"),
id = "histomask"
) +
with_mask(
geom_from_path(aes(path = img, x = 2009, y = 35), stat = "unique", width = 2.8, height = 2.8),
mask = ch_alpha("circle")
)
ggplot(zombie) +
as_reference(
geom_histogram(aes(year(release_date)), binwidth = 1, fill = "deeppink1"),
id = "histomask"
) +
with_mask(
geom_from_path(aes(path = img, x = 2009, y = 35), stat = "unique", width = 2.8, height = 2.8),
mask = ch_alpha("histomask")
) +
ggrepel::geom_text_repel(data = zombie_highl,
aes(x = year(release_date), y = -0.5,
label = paste0(title, ", ", year(release_date))),
nudge_y = 6,
segment.curvature = -1e-20,
family = f2,
fontface = "bold",
size = 4,
bg.color = "grey97",
seed = 999,
box.padding = 0.4,
segment.size = 0.25,
color = "deeppink4"
) +
geom_point(data = zombie_highl, aes(x = year(release_date), y = -0.5), color = "deeppink1") +
annotate("text", x = 1959, y = 20, label = "Zombie movies", size = 18, family = f2, fontface = "bold", hjust = 0, color = "deeppink2") +
annotate("text", x = 1959, y = 24, label = "Number of english speaking movies\nin The Movie Datbase that have the\nword 'zombie' in their title or description", size = 6, family = f1, fontface = "bold", hjust = 0, color = "deeppink3", vjust = 1, lineheight = 0.9) +
annotate("text", x = 1959, y = 31.5, label = "Source: The Movie Datbase Â· Image: cottonbro studio Â· Graphic: Georgios Karamanis", size = 3, family = f1, fontface = "bold", hjust = 0, color = "deeppink4", vjust = 1, lineheight = 0.9) +
scale_y_reverse(limits = c(50, -8), breaks = seq(0, 50, 10), labels = seq(0, 50, 10), position = "right") +
theme_minimal(base_family = "Outfit") +
theme(
plot.background = element_rect(fill = "grey97", color = NA),
axis.title = element_blank(),
axis.text = element_text(face = "bold", size = 14, color = "deeppink4")
)
install.packages("ggrepel")
ggplot(zombie) +
as_reference(
geom_histogram(aes(year(release_date)), binwidth = 1, fill = "deeppink1"),
id = "histomask"
) +
with_mask(
geom_from_path(aes(path = img, x = 2009, y = 35), stat = "unique", width = 2.8, height = 2.8),
mask = ch_alpha("histomask")
) +
ggrepel::geom_text_repel(data = zombie_highl,
aes(x = year(release_date), y = -0.5,
label = paste0(title, ", ", year(release_date))),
nudge_y = 6,
segment.curvature = -1e-20,
family = f2,
fontface = "bold",
size = 4,
bg.color = "grey97",
seed = 999,
box.padding = 0.4,
segment.size = 0.25,
color = "deeppink4"
)
ggplot(zombie) +
as_reference(
geom_histogram(aes(year(release_date)), binwidth = 1, fill = "deeppink1"),
id = "histomask"
) +
with_mask(
geom_from_path(aes(path = img, x = 2009, y = 35), stat = "unique", width = 2.8, height = 2.8),
mask = ch_alpha("histomask")
) +
ggrepel::geom_text_repel(data = zombie_highl,
aes(x = year(release_date), y = -0.5,
label = paste0(title, ", ", year(release_date))),
nudge_y = 6,
segment.curvature = -1e-20,
family = f2,
fontface = "bold",
size = 4,
bg.color = "grey97",
seed = 999,
box.padding = 0.4,
segment.size = 0.25,
color = "deeppink4"
) +
geom_point(data = zombie_highl, aes(x = year(release_date), y = -0.5), color = "deeppink1") +
annotate("text", x = 1959, y = 20, label = "Zombie movies", size = 18, family = f2, fontface = "bold", hjust = 0, color = "deeppink2") +
annotate("text", x = 1959, y = 24, label = "Number of english speaking movies\nin The Movie Datbase that have the\nword 'zombie' in their title or description", size = 6, family = f1, fontface = "bold", hjust = 0, color = "deeppink3", vjust = 1, lineheight = 0.9) +
annotate("text", x = 1959, y = 31.5, label = "Source: The Movie Datbase Â· Image: cottonbro studio Â· Graphic: Georgios Karamanis", size = 3, family = f1, fontface = "bold", hjust = 0, color = "deeppink4", vjust = 1, lineheight = 0.9) +
scale_y_reverse(limits = c(50, -8), breaks = seq(0, 50, 10), labels = seq(0, 50, 10), position = "right") +
theme_minimal(base_family = "Outfit") +
theme(
plot.background = element_rect(fill = "grey97", color = NA),
axis.title = element_blank(),
axis.text = element_text(face = "bold", size = 14, color = "deeppink4")
)
ggplot(zombie) +
as_reference(
geom_histogram(aes(year(release_date)), binwidth = 1, fill = "deeppink1"),
id = "histomask"
) +
with_mask(
geom_from_path(aes(path = img, x = 2009, y = 35), stat = "unique", width = 2.8, height = 2.8),
mask = ch_alpha("histomask")
) +
ggrepel::geom_text_repel(data = zombie_highl,
aes(x = year(release_date), y = -0.5,
label = paste0(title, ", ", year(release_date))),
nudge_y = 6,
segment.curvature = -1e-20,
family = f2,
fontface = "bold",
size = 4,
bg.color = "grey97",
seed = 999,
box.padding = 0.4,
segment.size = 0.25,
color = "deeppink4"
) +
geom_point(data = zombie_highl, aes(x = year(release_date), y = -0.5), color = "deeppink1") +
annotate("text", x = 1959, y = 20, label = "Zombie movies", size = 18, family = f2, fontface = "bold", hjust = 0, color = "deeppink2") +
annotate("text", x = 1959, y = 24, label = "Number of english speaking movies\nin The Movie Datbase that have the\nword 'zombie' in their title or description", size = 6, family = f1, fontface = "bold", hjust = 0, color = "deeppink3", vjust = 1, lineheight = 0.9) +
annotate("text", x = 1959, y = 31.5, label = "Source: The Movie Datbase Â· Image: cottonbro studio Â· Graphic: Georgios Karamanis", size = 3, family = f1, fontface = "bold", hjust = 0, color = "deeppink4", vjust = 1, lineheight = 0.9) +
scale_y_reverse(limits = c(50, -8), breaks = seq(0, 50, 10), labels = seq(0, 50, 10), position = "right")
df = data.frame(
x = 1:10
y = sample(1:100, 10)
df = data.frame(
x = 1:10,
y = sample(1:100, 10)
)
df
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
)
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
scale_y_reverse()
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
scale_y_reverse(limits = c(0,20))
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
scale_y_reverse(limits = c(0,-20))
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
scale_y_reverse(limits = c(0,20))
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
scale_y_reverse(limits = c(NA, NA))
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
scale_y_reverse(limits = c(NA, NA)) +
coord_cartesian(ylim = c(0,20))
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
scale_y_reverse(limits = c(NA, NA))
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
coord_cartesian(ylim = c(0,20))+
scale_y_reverse(limits = c(NA, NA))
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
coord_cartesian(ylim = c(0,20))+
scale_y_reverse()
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
coord_cartesian(ylim = c(0,-20))+
scale_y_reverse()
ggplot(df) +
geom_col(
aes(
x = x,
y = y
)
) +
coord_cartesian(ylim = c(20,0))+
scale_y_reverse()
